cp.kubernetes.masterUrl=https://api.alpha.k8s.aort.theplatform.com
cp.kubernetes.namespace=dfh

monitor.alive.lastRequestMilliseconds=45000

# use the StaticPodConfigRegistryClient
useStaticRegistryClient=true

############## Metrics / Monitors ##################
#Graphite reporting
graphite.path=1m.lab.main.t.aor.cppull.t01
graphite.endpoint=bananagramer.test.corp.theplatform.com
graphite.port=2003
graphite.enabled=true
#How often do we report a metric
metric.report.interval.milliseconds=5000

############################
#bananas/zenoss properties
############################
graphite.link=http://graphite.sandbox.corp.theplatform.com/render//graphlot/?width=600&height=300&target=*.lab.main.d.sea.senrab.sra1.devsenrab01.sensu-rabbitmq-results-queue.ready_messages
graphite.image=http://graphite.sandbox.corp.theplatform.com/render//render?width=300&height=200&hideLegend=true&from=-30minutes&target=*.lab.main.d.sea.senrab.sra1.devsenrab01.sensu-rabbitmq-results-queue.ready_messages
ccds.cluster=lab-main-t-aor-cppull-t01
ccds.shortname=cppull
slack.channel=dfh-alerts

#This has to be two values with a comma and no whitespace
banana.tags=zenoss,slack

#How often do we check for alive
health.check.frequency.milliseconds=120000
#How many failures before sending an alert.
alert.threshold=2
#Do we want to alert on alive
alive.check.enabled=true
#Description for our alive check alert
alert.description=DFH Fission Puller
tsg.link=http://tpconfluence.corp.theplatform.com/display/TD/DFH+Fission+Support
zenoss.component=dfh.fission.synthetic.alert.test
zenoss.device=FissionPuller
zenoss.short.description=Testing 123!
bananas.alert.endpoint=banana-broker.test.corp.theplatform.com
bananas.sender.timeout.milliseconds=30000
bananas.sender.milliseconds.between.retries=5000

